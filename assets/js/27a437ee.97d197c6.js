"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[79],{88880:e=>{e.exports=JSON.parse('{"functions":[{"name":"bootstrapGame","desc":"Flare-Engine Game Bootstrapper.","params":[],"returns":[{"desc":"","lua_type":"FrameworkType?"}],"function_type":"static","realm":["Server"],"source":{"line":66,"path":"src/Framework/init.lua"}},{"name":"gameIsLoaded","desc":"Returns if the game has loaded.","params":[],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"static","source":{"line":125,"path":"src/Framework/init.lua"}},{"name":"GetModulesFromCache","desc":"Returns a function to require utilities and modules within framework.\\n\\n```lua\\nlocal ServerScriptService = game:GetService(\\"ServerScriptService\\");\\nlocal Framework = require(ServerScriptService:WaitForChild(\\"src\\"):WaitForChild(\\"Framework\\"));\\n\\nlocal require = Framework:GetModulesFromCache();\\n\\nlocal Maid = require(\\"Maid\\");\\nlocal newMaid = Maid.new(); --\x3e Maid\\n\\nlocal Spring = require(\\"Spring\\");\\nlocal newSpring = Spring.new(); --\x3e Spring\\n```","params":[],"returns":[{"desc":"","lua_type":"RequireType"}],"function_type":"method","source":{"line":150,"path":"src/Framework/init.lua"}}],"properties":[{"name":"CachedModules","desc":"Framework variable storing every single cached module.","lua_type":"{}","source":{"line":112,"path":"src/Framework/init.lua"}},{"name":"GameSignals","desc":"Framework variable storing framework signals.","lua_type":"{}","source":{"line":119,"path":"src/Framework/init.lua"}}],"types":[{"name":"self","desc":"Framework self type.","lua_type":"{ CachedModules: typeof({}), GameSignals: { RBXScriptSignal }","source":{"line":47,"path":"src/Framework/init.lua"}},{"name":"FrameworkType","desc":"Framework type.","lua_type":"typeof(setmetatable({} :: self, FlareServer))","source":{"line":56,"path":"src/Framework/init.lua"}},{"name":"RequireType","desc":"Framework type returned on `FlareServer:GetModulesFromCache()`.","lua_type":"(ModuleScript | \\"Maid\\" | \\"Network\\" | \\"Promise\\" | \\"Roact\\" | \\"Signal\\" | \\"Spring\\") -> {}","source":{"line":13,"path":"src/Framework/Types.lua"}},{"name":"BaseRuntimeModule","desc":"Framework type used by runtime modules.","lua_type":"{ Init: (any?), Start: (any?) }","source":{"line":20,"path":"src/Framework/Types.lua"}}],"name":"FlareServer","desc":"Flare-Engine Server Framework. Used for bootstrapping the game and accessing modules externally or internally.\\n\\nServer framework is loaded via server script:\\n\\n```lua\\nlocal ServerScriptService = game:GetService(\\"ServerScriptService\\");\\nlocal Framework = require(ServerScriptService:WaitForChild(\\"src\\"):WaitForChild(\\"Framework\\")).bootstrapGame();\\n```","realm":["Server"],"source":{"line":14,"path":"src/Framework/init.lua"}}')}}]);