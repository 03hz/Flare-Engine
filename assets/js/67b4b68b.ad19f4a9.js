"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[976],{84033:e=>{e.exports=JSON.parse('{"functions":[{"name":"loadClient","desc":"Flare-Engine Client module loader.","params":[],"returns":[{"desc":"","lua_type":"FrameworkType?"}],"function_type":"static","realm":["Client"],"source":{"line":78,"path":"src/Client/Init.client/Framework/init.lua"}},{"name":"gameIsLoaded","desc":"Returns if the client has loaded.","params":[],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"static","source":{"line":175,"path":"src/Client/Init.client/Framework/init.lua"}},{"name":"GetModulesFromCache","desc":"Returns a function to require utilities and modules within framework.\\n\\n```lua\\nlocal Framework = require(script.Parent.Parent:WaitForChild(\\"Framework\\")); --// Script must be a descendant of your framework module\\n\\nlocal require = Framework:GetModulesFromCache();\\n\\nlocal Maid = require(\\"Maid\\");\\nlocal newMaid = Maid.new(); --\x3e Maid\\n\\nlocal Spring = require(\\"Spring\\");\\nlocal newSpring = Spring.new(); --\x3e Spring\\n```","params":[],"returns":[{"desc":"","lua_type":"RequireType"}],"function_type":"method","source":{"line":199,"path":"src/Client/Init.client/Framework/init.lua"}}],"properties":[{"name":"CachedModules","desc":"Framework variable storing every single cached module.","lua_type":"{}","source":{"line":144,"path":"src/Client/Init.client/Framework/init.lua"}},{"name":"GameSignals","desc":"Framework variable storing framework signals.","lua_type":"{}","source":{"line":151,"path":"src/Client/Init.client/Framework/init.lua"}},{"name":"GameVariables","desc":"Framework a table containing client changing variables.","lua_type":"{ LocalPlayer: Player, Character: Model?, Humanoid: Humanoid?, Camera: Camera };","source":{"line":158,"path":"src/Client/Init.client/Framework/init.lua"}},{"name":"LocalClientStorage","desc":"Local client storage. Mainly used to store Guis.","lua_type":"Instance;","source":{"line":165,"path":"src/Client/Init.client/Framework/init.lua"}}],"types":[{"name":"self","desc":"Framework self type.","lua_type":"{ CachedModules: typeof({}), GameVariables: { LocalPlayer: Player, Character: Model?, Humanoid: Humanoid?, Camera: Camera }, GameSignals: { RBXScriptSignal }, LocalClientStorage: Instance }","source":{"line":59,"path":"src/Client/Init.client/Framework/init.lua"}},{"name":"FrameworkType","desc":"Framework type.","lua_type":"typeof(setmetatable({} :: self, FlareClient))","source":{"line":68,"path":"src/Client/Init.client/Framework/init.lua"}},{"name":"RequireType","desc":"Framework type returned on `FlareClient:GetModulesFromCache()`.","lua_type":"(ModuleScript | \\"Maid\\" | \\"Network\\" | \\"Promise\\" | \\"Roact\\" | \\"Signal\\" | \\"Spring\\") -> {}","source":{"line":13,"path":"src/Client/Init.client/Framework/Types.lua"}},{"name":"BaseRuntimeModule","desc":"Framework type used by runtime modules.","lua_type":"{ Init: (any?), Start: (any?) }","source":{"line":20,"path":"src/Client/Init.client/Framework/Types.lua"}}],"name":"FlareClient","desc":"Flare-Engine Client Framework. Handles client modules.\\n\\nClient framework is loaded via client script that has been replicated by the server:\\n\\n```lua\\nlocal Players = game:GetService(\\"Players\\");\\nlocal LocalPlayer = Players.LocalPlayer;\\n\\nscript.Parent = LocalPlayer.PlayerScripts;\\nlocal Framework = require(script:WaitForChild(\\"Framework\\")).loadClient();\\n```","realm":["Client"],"source":{"line":17,"path":"src/Client/Init.client/Framework/init.lua"}}')}}]);